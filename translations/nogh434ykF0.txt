<p>如果我可以改變我學習編碼的時間中的一件事，</p>  
<p>那就不是我選擇的教程或我開始時的語言，</p>  
<p>而是這些心態的改變，</p>  
<p>所以我會直接說出來。</p>  
<p>第一點是專注於實踐而不是理論。</p>  
<p>當我剛開始的時候，</p>  
<p>我偶然在互聯網上遇到一篇博客文章，</p>  
<p>裡面提到了一個像是「一萬小時規則」的概念，</p>  
<p>它說如果你花一萬小時去做某事，你最終會成為大師。</p>  
<p>在我心裡，我理解這點就是我要去讀很多書，</p>  
<p>還有看很多關於編程的教程，</p>  
<p>一萬小時越快越好，</p>  
<p>我就會變得越好的程序員。</p>  
<p>現在我的哲學顯然不同了，</p>  
<p>而是「一萬行代碼的方法」。</p>  
<p>我能有多快寫到一萬行代碼，</p>  
<p>而每一千行都比上一行更好。</p>  
<p>編碼或編程是一種技藝，</p>  
<p>你通過不效率、緩慢和拙劣的方式變得更好。</p>  
<p>這更像是木工、演奏樂器或畫畫，</p>  
<p>而不是法律、歷史或金融這種資訊密集的領域。</p>  
<p>最後，這一點或這種心態在避免依賴教程上真的很有幫助。</p>  
<p>如果這個視頻獲得10個讚，我會製作一個逐步指南，教你如何走出教程地獄。</p>  

<p>好了，第二點是自我驕傲是敵人。</p>  
<p>當我剛開始的時候，</p>  
<p>我不想做那些簡單的HTML和CSS食譜網站，</p>  
<p>這些都是教程中會讓你做的。</p>  
<p>我想做一些酷炫的東西，</p>  
<p>我想製作我的Facebook克隆、Reddit克隆，</p>  
<p>我想在算法和REST API上深入挖掘。</p>  
<p>這是在說我的自我驕傲。</p>  
<p>如果我能放下自尊，</p>  
<p>不認為做這些基本的事情是低人一等，</p>  
<p>我會在短時間內成為更好的工程師。</p>  

<p>第三點是，要習慣於不舒服。</p>  
<p>在軟件工程中，你是信息的管理者，</p>  
<p>所以你的工作不是了解所有的一切。</p>  
<p>作為一名專業的開發者，你永遠不會知道所有的知識。</p>  
<p>不過，考慮到在你的專業範疇內的問題，</p>  
<p>比如你是一名後端工程師，遇到後端問題，你就應該能解決它。</p>  
<p>這是一種真的讓人感到不舒服的感覺，</p>  
<p>而且這種感覺不會消失。</p>  
<p>工具會在那裡，你可以在工作外閱讀很多，</p>  
<p>但這個領域中有很多你必須學會接受的不適。</p>  
<p>你必須學會從中找到樂趣，</p>  
<p>將這看作是你喜愛的一部分工作。</p>  
<p>就像：好吧，我現在不再不舒服了，我實際上是要學到東西，</p>  
<p>我會超越之前所知道的東西，</p>  
<p>這就是這個領域的美麗所在。</p>  

<p>最後一點是，你永遠不會精通編程。</p>  
<p>我經常在Reddit上看到這種帖子，</p>  
<p>像是「我多久能掌握某種語言」或是「我應該在學CSS之前先學HTML嗎」，</p>  
<p>這些都是忽視了編程對初學者的真正意義。</p>  
<p>你不應該在一開始就精通語言，</p>  
<p>而是應該與它們一起去建構東西，然後不斷改進。</p>  
<p>你並不是要精通編程概念，</p>  
<p>而是當你觀看教程或閱讀書籍時，</p>  
<p>你只是模糊地理解它們。</p>  
<p>接著，你需要在項目中多次應用它們，</p>  
<p>然後不斷改進。</p>  
<p>這真的是回到了我所說的編碼是一種藝品這一點上。</p>  

<p>例如，這是我經歷過的情況，</p>  
<p>你開始學習編碼，卻碰到一些你不理解的概念，比如CSS的flexbox。</p>  
<p>我以前會怎麼做呢？我會坐下來不停地閱讀這個概念，</p>  
<p>觀看不同的視頻，</p>  
<p>並試圖在下個步驟之前精通這個概念，</p>  
<p>這完全是錯誤的。</p>  
<p>我現在會這樣做：好吧，我不理解這一點，</p>  
<p>讓我先完成這個教程的這一部分，</p>  
<p>或是我設置的任何部分，</p>  
<p>然後再去用它建構東西。</p>  

<p>所以你立即的反駁可能會是：好吧，但如果我不是一個大師，</p>  
<p>那我怎麼能在這個行業找到工作呢？</p>  
<p>不過你又忽略了要點，</p>  
<p>當你被聘為初級開發者時，</p>  
<p>你不需要成為大師。</p>  
<p>你需要了解公司所尋找的範疇的一部分，</p>  
<p>比如前端開發，</p>  
<p>你需要有毅力、耐心和堅持不懈的精神，</p>  
<p>不斷學習和吸收新知識。</p>  
<p>這就是優秀程序員的成長之道。</p>  
<p>他們非常瞭解基礎，不是透過閱讀書籍或做視頻教程，</p>  
<p>而是通過構建一系列的項目，</p>  
<p>他們永遠渴望學習更多。</p>  
<p>因此，他們做了很多練習，</p>  
<p>放下自尊，</p>  
<p>非常習慣於不舒服的感覺，</p>  
<p>因為他們在學習，</p>  
<p>而且在這不斷追求精通的過程中。</p>